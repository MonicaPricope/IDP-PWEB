version: '3.7'
services:
  php:
    image: test-app
    container_name: php-app
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
    ports:
      - '8001:80'
    networks:
      - database_setup_w3snet
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
        loki-external-labels: owner=monica,environment=development

  kong:
    image: test-kong
  #  volumes:
  #    - /var/jenkins_home/basic/kong/kong.yml:/usr/local/kong/declarative/kong.yml #injectarea fisierului de configurare la calea specificata
    environment:
      KONG_DATABASE: 'off' #obligatoriu, daca se vrea modul DB-less
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml #trebuie specificat unde anume se va gasi fisierul de configurare
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000 #expunerea porturilor
      - 8443:8443
    networks:
      - database_setup_w3snet

  loki:
    image: my-loki
    volumes:
      - ../logging_setup/wal:/wal
    entrypoint:
      - /usr/bin/loki
      - -config.file=/etc/config/loki.yml
    ports:
      - 3100:3100
    networks:
      - database_setup_w3snet
  
  grafana:
    image: grafana/grafana
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - 5000:3000
    depends_on:
      - loki
    networks:
      - database_setup_w3snet

  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    hostname: rabbitmq

volumes:
  grafana-volume:

networks:
  database_setup_w3snet:
    external: true
